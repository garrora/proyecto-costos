//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoCostos.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoCostosEntities : DbContext
    {
        public ProyectoCostosEntities()
            : base("name=ProyectoCostosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cantones> Cantones { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<CodGenerar> CodGenerar { get; set; }
        public virtual DbSet<Costos> Costos { get; set; }
        public virtual DbSet<Distritos> Distritos { get; set; }
        public virtual DbSet<Provincias> Provincias { get; set; }
        public virtual DbSet<Proyectos> Proyectos { get; set; }
        public virtual DbSet<TipoCosto> TipoCosto { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual int SPActualizarCliente(Nullable<long> numeroIdentificacion, string tipoIdentificacion, string nombre, Nullable<int> numeroTelefonico, string correoElectronico, string correoElectronicoCopia, Nullable<int> codigoTelefonico, Nullable<int> iDProvincia, Nullable<int> iDCanton, Nullable<int> iDDistrito, string direccion)
        {
            var numeroIdentificacionParameter = numeroIdentificacion.HasValue ?
                new ObjectParameter("NumeroIdentificacion", numeroIdentificacion) :
                new ObjectParameter("NumeroIdentificacion", typeof(long));
    
            var tipoIdentificacionParameter = tipoIdentificacion != null ?
                new ObjectParameter("TipoIdentificacion", tipoIdentificacion) :
                new ObjectParameter("TipoIdentificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var numeroTelefonicoParameter = numeroTelefonico.HasValue ?
                new ObjectParameter("NumeroTelefonico", numeroTelefonico) :
                new ObjectParameter("NumeroTelefonico", typeof(int));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var correoElectronicoCopiaParameter = correoElectronicoCopia != null ?
                new ObjectParameter("CorreoElectronicoCopia", correoElectronicoCopia) :
                new ObjectParameter("CorreoElectronicoCopia", typeof(string));
    
            var codigoTelefonicoParameter = codigoTelefonico.HasValue ?
                new ObjectParameter("CodigoTelefonico", codigoTelefonico) :
                new ObjectParameter("CodigoTelefonico", typeof(int));
    
            var iDProvinciaParameter = iDProvincia.HasValue ?
                new ObjectParameter("IDProvincia", iDProvincia) :
                new ObjectParameter("IDProvincia", typeof(int));
    
            var iDCantonParameter = iDCanton.HasValue ?
                new ObjectParameter("IDCanton", iDCanton) :
                new ObjectParameter("IDCanton", typeof(int));
    
            var iDDistritoParameter = iDDistrito.HasValue ?
                new ObjectParameter("IDDistrito", iDDistrito) :
                new ObjectParameter("IDDistrito", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPActualizarCliente", numeroIdentificacionParameter, tipoIdentificacionParameter, nombreParameter, numeroTelefonicoParameter, correoElectronicoParameter, correoElectronicoCopiaParameter, codigoTelefonicoParameter, iDProvinciaParameter, iDCantonParameter, iDDistritoParameter, direccionParameter);
        }
    
        public virtual int SPActualizarCosto(string iDCosto, string nombre, string fecha, string monto, string tipo, string moneda, string cambio, string estado)
        {
            var iDCostoParameter = iDCosto != null ?
                new ObjectParameter("IDCosto", iDCosto) :
                new ObjectParameter("IDCosto", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var montoParameter = monto != null ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var cambioParameter = cambio != null ?
                new ObjectParameter("Cambio", cambio) :
                new ObjectParameter("Cambio", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPActualizarCosto", iDCostoParameter, nombreParameter, fechaParameter, montoParameter, tipoParameter, monedaParameter, cambioParameter, estadoParameter);
        }
    
        public virtual int SPActualizarProyecto(string iDProyecto, string codProyecto, string nombre, string descripcion, string fechaInicio, string fechaFin, string monto, string contrato, string numeroIdentificacion, string moneda, string cambio, string estado)
        {
            var iDProyectoParameter = iDProyecto != null ?
                new ObjectParameter("IDProyecto", iDProyecto) :
                new ObjectParameter("IDProyecto", typeof(string));
    
            var codProyectoParameter = codProyecto != null ?
                new ObjectParameter("CodProyecto", codProyecto) :
                new ObjectParameter("CodProyecto", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            var montoParameter = monto != null ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var numeroIdentificacionParameter = numeroIdentificacion != null ?
                new ObjectParameter("NumeroIdentificacion", numeroIdentificacion) :
                new ObjectParameter("NumeroIdentificacion", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var cambioParameter = cambio != null ?
                new ObjectParameter("Cambio", cambio) :
                new ObjectParameter("Cambio", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPActualizarProyecto", iDProyectoParameter, codProyectoParameter, nombreParameter, descripcionParameter, fechaInicioParameter, fechaFinParameter, montoParameter, contratoParameter, numeroIdentificacionParameter, monedaParameter, cambioParameter, estadoParameter);
        }
    
        public virtual int SPActulizarContrasena(string usuario, string contrasena)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPActulizarContrasena", usuarioParameter, contrasenaParameter);
        }
    
        public virtual int SPEliminarCliente(Nullable<long> numeroIdentificacion)
        {
            var numeroIdentificacionParameter = numeroIdentificacion.HasValue ?
                new ObjectParameter("NumeroIdentificacion", numeroIdentificacion) :
                new ObjectParameter("NumeroIdentificacion", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPEliminarCliente", numeroIdentificacionParameter);
        }
    
        public virtual int SPEliminarCosto(string iDCosto)
        {
            var iDCostoParameter = iDCosto != null ?
                new ObjectParameter("IDCosto", iDCosto) :
                new ObjectParameter("IDCosto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPEliminarCosto", iDCostoParameter);
        }
    
        public virtual int SPEliminarProyecto(string iDProyecto)
        {
            var iDProyectoParameter = iDProyecto != null ?
                new ObjectParameter("IDProyecto", iDProyecto) :
                new ObjectParameter("IDProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPEliminarProyecto", iDProyectoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SPIniciarSesion(string usuario, string contrasena)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SPIniciarSesion", usuarioParameter, contrasenaParameter);
        }
    
        public virtual int SPInsertarClientes(Nullable<long> numeroIdentificacion, string tipoIdentificacion, string nombre, Nullable<int> numeroTelefonico, string correoElectronico, string correoElectronicoCopia, Nullable<int> codigoTelefonico, Nullable<int> iDProvincia, Nullable<int> iDCanton, Nullable<int> iDDistrito, string direccion)
        {
            var numeroIdentificacionParameter = numeroIdentificacion.HasValue ?
                new ObjectParameter("NumeroIdentificacion", numeroIdentificacion) :
                new ObjectParameter("NumeroIdentificacion", typeof(long));
    
            var tipoIdentificacionParameter = tipoIdentificacion != null ?
                new ObjectParameter("TipoIdentificacion", tipoIdentificacion) :
                new ObjectParameter("TipoIdentificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var numeroTelefonicoParameter = numeroTelefonico.HasValue ?
                new ObjectParameter("NumeroTelefonico", numeroTelefonico) :
                new ObjectParameter("NumeroTelefonico", typeof(int));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var correoElectronicoCopiaParameter = correoElectronicoCopia != null ?
                new ObjectParameter("CorreoElectronicoCopia", correoElectronicoCopia) :
                new ObjectParameter("CorreoElectronicoCopia", typeof(string));
    
            var codigoTelefonicoParameter = codigoTelefonico.HasValue ?
                new ObjectParameter("CodigoTelefonico", codigoTelefonico) :
                new ObjectParameter("CodigoTelefonico", typeof(int));
    
            var iDProvinciaParameter = iDProvincia.HasValue ?
                new ObjectParameter("IDProvincia", iDProvincia) :
                new ObjectParameter("IDProvincia", typeof(int));
    
            var iDCantonParameter = iDCanton.HasValue ?
                new ObjectParameter("IDCanton", iDCanton) :
                new ObjectParameter("IDCanton", typeof(int));
    
            var iDDistritoParameter = iDDistrito.HasValue ?
                new ObjectParameter("IDDistrito", iDDistrito) :
                new ObjectParameter("IDDistrito", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInsertarClientes", numeroIdentificacionParameter, tipoIdentificacionParameter, nombreParameter, numeroTelefonicoParameter, correoElectronicoParameter, correoElectronicoCopiaParameter, codigoTelefonicoParameter, iDProvinciaParameter, iDCantonParameter, iDDistritoParameter, direccionParameter);
        }
    
        public virtual int SPInsertarCosto(string nombre, string fecha, string monto, string tipo, string iDProyecto, string moneda, string cambio, string estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var montoParameter = monto != null ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var iDProyectoParameter = iDProyecto != null ?
                new ObjectParameter("IDProyecto", iDProyecto) :
                new ObjectParameter("IDProyecto", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var cambioParameter = cambio != null ?
                new ObjectParameter("Cambio", cambio) :
                new ObjectParameter("Cambio", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInsertarCosto", nombreParameter, fechaParameter, montoParameter, tipoParameter, iDProyectoParameter, monedaParameter, cambioParameter, estadoParameter);
        }
    
        public virtual int SPInsertarProyecto(string codProyecto, string nombre, string descripcion, string fechaInicio, string fechaFin, string monto, string contrato, string numeroIdentificacion, string moneda, string cambio, string estado)
        {
            var codProyectoParameter = codProyecto != null ?
                new ObjectParameter("CodProyecto", codProyecto) :
                new ObjectParameter("CodProyecto", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            var montoParameter = monto != null ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var numeroIdentificacionParameter = numeroIdentificacion != null ?
                new ObjectParameter("NumeroIdentificacion", numeroIdentificacion) :
                new ObjectParameter("NumeroIdentificacion", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var cambioParameter = cambio != null ?
                new ObjectParameter("Cambio", cambio) :
                new ObjectParameter("Cambio", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInsertarProyecto", codProyectoParameter, nombreParameter, descripcionParameter, fechaInicioParameter, fechaFinParameter, montoParameter, contratoParameter, numeroIdentificacionParameter, monedaParameter, cambioParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SPListarCantidadProyectosCliente_Result> SPListarCantidadProyectosCliente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarCantidadProyectosCliente_Result>("SPListarCantidadProyectosCliente");
        }
    
        public virtual ObjectResult<SPListarCanton_Result> SPListarCanton()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarCanton_Result>("SPListarCanton");
        }
    
        public virtual ObjectResult<SPListarCantones_Result> SPListarCantones(Nullable<int> iDProvincia)
        {
            var iDProvinciaParameter = iDProvincia.HasValue ?
                new ObjectParameter("IDProvincia", iDProvincia) :
                new ObjectParameter("IDProvincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarCantones_Result>("SPListarCantones", iDProvinciaParameter);
        }
    
        public virtual ObjectResult<SPListarCliente_Result> SPListarCliente(Nullable<long> numeroIdentificacion)
        {
            var numeroIdentificacionParameter = numeroIdentificacion.HasValue ?
                new ObjectParameter("NumeroIdentificacion", numeroIdentificacion) :
                new ObjectParameter("NumeroIdentificacion", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarCliente_Result>("SPListarCliente", numeroIdentificacionParameter);
        }
    
        public virtual ObjectResult<SPListarClientes_Result> SPListarClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarClientes_Result>("SPListarClientes");
        }
    
        public virtual ObjectResult<SPListarClientesProyecto_Result> SPListarClientesProyecto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarClientesProyecto_Result>("SPListarClientesProyecto");
        }
    
        public virtual ObjectResult<SPListarCosto_Result> SPListarCosto(string iDCosto)
        {
            var iDCostoParameter = iDCosto != null ?
                new ObjectParameter("IDCosto", iDCosto) :
                new ObjectParameter("IDCosto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarCosto_Result>("SPListarCosto", iDCostoParameter);
        }
    
        public virtual ObjectResult<SPListarCostoProyectoCliente_Result> SPListarCostoProyectoCliente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarCostoProyectoCliente_Result>("SPListarCostoProyectoCliente");
        }
    
        public virtual ObjectResult<SPListarCostos_Result> SPListarCostos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarCostos_Result>("SPListarCostos");
        }
    
        public virtual ObjectResult<SPListarDistrito_Result> SPListarDistrito()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarDistrito_Result>("SPListarDistrito");
        }
    
        public virtual ObjectResult<SPListarDistritos_Result> SPListarDistritos(Nullable<int> iDCanton)
        {
            var iDCantonParameter = iDCanton.HasValue ?
                new ObjectParameter("IDCanton", iDCanton) :
                new ObjectParameter("IDCanton", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarDistritos_Result>("SPListarDistritos", iDCantonParameter);
        }
    
        public virtual ObjectResult<string> SPListarEstadoCostos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPListarEstadoCostos");
        }
    
        public virtual ObjectResult<SPListarProvincia_Result> SPListarProvincia(Nullable<int> iDProvincia)
        {
            var iDProvinciaParameter = iDProvincia.HasValue ?
                new ObjectParameter("IDProvincia", iDProvincia) :
                new ObjectParameter("IDProvincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarProvincia_Result>("SPListarProvincia", iDProvinciaParameter);
        }
    
        public virtual ObjectResult<SPListarProvincias_Result> SPListarProvincias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarProvincias_Result>("SPListarProvincias");
        }
    
        public virtual ObjectResult<SPListarProyecto_Result> SPListarProyecto(string iDProyecto)
        {
            var iDProyectoParameter = iDProyecto != null ?
                new ObjectParameter("IDProyecto", iDProyecto) :
                new ObjectParameter("IDProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarProyecto_Result>("SPListarProyecto", iDProyectoParameter);
        }
    
        public virtual ObjectResult<SPListarProyectos_Result> SPListarProyectos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarProyectos_Result>("SPListarProyectos");
        }
    
        public virtual ObjectResult<SPListarPrueba_Result> SPListarPrueba()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarPrueba_Result>("SPListarPrueba");
        }
    
        public virtual ObjectResult<SPListarSelectClientes_Result> SPListarSelectClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarSelectClientes_Result>("SPListarSelectClientes");
        }
    
        public virtual ObjectResult<SPListarSelectTipoCostos_Result> SPListarSelectTipoCostos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListarSelectTipoCostos_Result>("SPListarSelectTipoCostos");
        }
    }
}
